<!-- AddHardware.razor -->
@page "/addhardware"
@using BlazorApp.Data
@using System.Data.SqlClient

<style>
    h3 {
        font-size: 24px;
        margin-bottom: 20px;
    }

    div {
        margin-bottom: 15px;
    }

    label {
        display: inline-block;
        width: 150px;
        font-weight: bold;
        margin-bottom: 5px;
    }

    input, textarea {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
    }

    button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        button:hover {
            background-color: #45a049;
        }
</style>

<h3>Add new hardware product</h3>

<EditForm Model="@newHardware" OnValidSubmit="@AddHardwareHandler">
    <div>
        <label>Product-Name:</label>
        <InputText @bind-Value="newHardware.Name" />
    </div>

    <div>
        <label>Description:</label>
        <InputTextArea @bind-Value="newHardware.Description" />
    </div>

    <div>
        <label>Price:</label>
        <InputNumber @bind-Value="newHardware.Price" />
    </div>

    <div>
        <label>Seller Id:</label>
        <span>5004</span>
    </div>

    <button type="submit">Save hardware</button>
</EditForm>

@code {
    private Hardware newHardware = new Hardware();
    private DbService dbService;

    protected override void OnInitialized()
    {
        string connectionString = "Server=(localdb)\\Local;Database=master;Integrated Security=True;";
        dbService = new DbService(connectionString);
    }

    private async Task AddHardwareHandler()
    {
        try
        {
            newHardware.SellerId = 5004;
            newHardware.EnsureNotNullValues();

            await dbService.AddHardwareAsync(newHardware);

            // Reset input fields
            newHardware = new Hardware();
        }
        catch (Exception ex)
        {
            // Print error details to the console
            Console.WriteLine($"Error adding hardware: {ex.Message}");

            // Additional error details
            if (ex.InnerException != null)
            {
                Console.WriteLine($"Inner Exception: {ex.InnerException.Message}");
            }



            // Print stack trace
            Console.WriteLine($"Stack Trace: {ex.StackTrace}");
        }
    }
}
