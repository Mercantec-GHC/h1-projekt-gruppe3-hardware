@page "/allhardware"
@using BlazorApp.Data

<style>
    body {
        margin: 0;
        padding: 0;
        font-family: 'Arial', sans-serif;
        background: #f2f2f2;
        display: flex;
        height: 100vh;
    }

    .sidebar {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 250px;
    }

    .content {
        flex: 1;
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin: 20px;
        overflow-x: auto;
    }

    h3 {
        font-size: 24px;
        margin-bottom: 20px;
        color: #333;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    th, td {
        padding: 12px;
        border: 1px solid #ddd;
    }

    th {
        background-color: #4CAF50;
        color: #fff;
    }

    tbody tr:nth-child(even) {
        background-color: #f2f2f2;
    }
</style>

<div class="sidebar">
    <h3>All Products</h3>

    <form @onsubmit="FilterProducts">
        <label for="minPrice">Min Price:</label>
        <input type="number" id="minPrice" @bind="minPrice" />

        <label for="maxPrice">Max Price:</label>
        <input type="number" id="maxPrice" @bind="maxPrice" />

        <button type="submit">Apply Filter</button>
    </form>
</div>

<div class="content">
    <h3>List of products:</h3>

    @if (hardwareList == null)
    {
        <p>Loading...</p>
    }
    else if (hardwareList.Any())
    {
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Seller Id</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var hardware in hardwareList)
                {
                    <tr>
                        <td>@hardware.Name</td>
                        <td>@hardware.Description</td>
                        <td>@string.Format("{0:C}", hardware.Price)</td>
                        <td>@hardware.SellerId</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No hardware products found.</p>
    }
</div>

@code {
    private List<Hardware> hardwareList = new List<Hardware>();
    private DbService dbService;
    private decimal? minPrice;
    private decimal? maxPrice;

    protected override async Task OnInitializedAsync()
    {
        string connectionString = "Server=(localdb)\\Local;Database=master;Integrated Security=True;";
        dbService = new DbService(connectionString);

        // Load hardware data from the database
        await LoadHardwareList();
    }

    private async Task LoadHardwareList()
    {
        try
        {
            hardwareList = await dbService.GetAllHardwareAsync();
        }
        catch (Exception ex)
        {
            //Error Handling (Log)
            Console.WriteLine($"Error loading hardware list: {ex.Message}");
        }
    }

    private async Task FilterProducts()
    {
        await LoadHardwareList();
    }

}
